{"ts":1353657447103,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1353657412575,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n  margin: 0;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n<script src=\"libs/d3.v2.min.js\"></script>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\" src=\"libs/jQuery-URL-Parser/purl.js\"></script>\n<script>\n//The country map is a cheat.\n//It should be a Language category with nodes for each country.\n//I either need to make it possible to add repos with multiple nodes or make nested categories\n//so that adding large amounts of data to a category is easier.\nvar country_map = {\n'Afghanistan':'AF',\n'Albania':'AL',\n'Algeria':'DZ',\n'American Samoa':'AS',\n'Andorra':'AD',\n'Angola':'AO',\n'Anguilla':'AI',\n'Antarctica':'AQ',\n'Antigua And Barbuda':'AG',\n'Argentina':'AR',\n'Armenia':'AM',\n'Aruba':'AW',\n'Australia':'AU',\n'Austria':'AT',\n'Azerbaijan':'AZ',\n'Bahamas':'BS',\n'Bahrain':'BH',\n'Bangladesh':'BD',\n'Barbados':'BB',\n'Belarus':'BY',\n'Belgium':'BE',\n'Belize':'BZ',\n'Benin':'BJ',\n'Bermuda':'BM',\n'Bhutan':'BT',\n'Bolivia':'BO',\n'Bosnia And Herzegovina':'BA',\n'Botswana':'BW',\n'Bouvet Island':'BV',\n'Brazil':'BR',\n'British Indian Ocean Territory':'IO',\n'Brunei':'BN',\n'Bulgaria':'BG',\n'Burkina Faso':'BF',\n'Burundi':'BI',\n'Cambodia':'KH',\n'Cameroon':'CM',\n'Canada':'CA',\n'Cape Verde':'CV',\n'Cayman Islands':'KY',\n'Central African Republic':'CF',\n'Chad':'TD',\n'Chile':'CL',\n'China':'CN',\n'Christmas Island':'CX',\n'Cocos (Keeling) Islands':'CC',\n'Columbia':'CO',\n'Comoros':'KM',\n'Congo':'CG',\n'Cook Islands':'CK',\n'Costa Rica':'CR',\n'Cote D\\'Ivorie (Ivory Coast)':'CI',\n'Croatia (Hrvatska)':'HR',\n'Cuba':'CU',\n'Cyprus':'CY',\n'Czech Republic':'CZ',\n'Democratic Republic Of Congo (Zaire)':'CD',\n'Denmark':'DK',\n'Djibouti':'DJ',\n'Dominica':'DM',\n'Dominican Republic':'DO',\n'East Timor':'TP',\n'Ecuador':'EC',\n'Egypt':'EG',\n'El Salvador':'SV',\n'Equatorial Guinea':'GQ',\n'Eritrea':'ER',\n'Estonia':'EE',\n'Ethiopia':'ET',\n'Falkland Islands (Malvinas)':'FK',\n'Faroe Islands':'FO',\n'Fiji':'FJ',\n'Finland':'FI',\n'France':'FR',\n'France, Metropolitan':'FX',\n'French Guinea':'GF',\n'French Polynesia':'PF',\n'French Southern Territories':'TF',\n'Gabon':'GA',\n'Gambia':'GM',\n'Georgia':'GE',\n'Germany':'DE',\n'Ghana':'GH',\n'Gibraltar':'GI',\n'Greece':'GR',\n'Greenland':'GL',\n'Grenada':'GD',\n'Guadeloupe':'GP',\n'Guam':'GU',\n'Guatemala':'GT',\n'Guinea':'GN',\n'Guinea-Bissau':'GW',\n'Guyana':'GY',\n'Haiti':'HT',\n'Heard And McDonald Islands':'HM',\n'Honduras':'HN',\n'Hong Kong':'HK',\n'Hungary':'HU',\n'Iceland':'IS',\n'India':'IN',\n'Indonesia':'ID',\n'Iran':'IR',\n'Iraq':'IQ',\n'Ireland':'IE',\n'Israel':'IL',\n'Italy':'IT',\n'Jamaica':'JM',\n'Japan':'JP',\n'Jordan':'JO',\n'Kazakhstan':'KZ',\n'Kenya':'KE',\n'Kiribati':'KI',\n'Kuwait':'KW',\n'Kyrgyzstan':'KG',\n'Laos':'LA',\n'Latvia':'LV',\n'Lebanon':'LB',\n'Lesotho':'LS',\n'Liberia':'LR',\n'Libya':'LY',\n'Liechtenstein':'LI',\n'Lithuania':'LT',\n'Luxembourg':'LU',\n'Macau':'MO',\n'Macedonia':'MK',\n'Madagascar':'MG',\n'Malawi':'MW',\n'Malaysia':'MY',\n'Maldives':'MV',\n'Mali':'ML',\n'Malta':'MT',\n'Marshall Islands':'MH',\n'Martinique':'MQ',\n'Mauritania':'MR',\n'Mauritius':'MU',\n'Mayotte':'YT',\n'Mexico':'MX',\n'Micronesia':'FM',\n'Moldova':'MD',\n'Monaco':'MC',\n'Mongolia':'MN',\n'Montserrat':'MS',\n'Morocco':'MA',\n'Mozambique':'MZ',\n'Myanmar (Burma)':'MM',\n'Namibia':'NA',\n'Nauru':'NR',\n'Nepal':'NP',\n'Netherlands':'NL',\n'Netherlands Antilles':'AN',\n'New Caledonia':'NC',\n'New Zealand':'NZ',\n'Nicaragua':'NI',\n'Niger':'NE',\n'Nigeria':'NG',\n'Niue':'NU',\n'Norfolk Island':'NF',\n'North Korea':'KP',\n'Northern Mariana Islands':'MP',\n'Norway':'NO',\n'Oman':'OM',\n'Pakistan':'PK',\n'Palau':'PW',\n'Panama':'PA',\n'Papua New Guinea':'PG',\n'Paraguay':'PY',\n'Peru':'PE',\n'Philippines':'PH',\n'Pitcairn':'PN',\n'Poland':'PL',\n'Portugal':'PT',\n'Puerto Rico':'PR',\n'Qatar':'QA',\n'Reunion':'RE',\n'Romania':'RO',\n'Russia':'RU',\n'Rwanda':'RW',\n'Saint Helena':'SH',\n'Saint Kitts And Nevis':'KN',\n'Saint Lucia':'LC',\n'Saint Pierre And Miquelon':'PM',\n'Saint Vincent And The Grenadines':'VC',\n'San Marino':'SM',\n'Sao Tome And Principe':'ST',\n'Saudi Arabia':'SA',\n'Senegal':'SN',\n'Seychelles':'SC',\n'Sierra Leone':'SL',\n'Singapore':'SG',\n'Slovak Republic':'SK',\n'Slovenia':'SI',\n'Solomon Islands':'SB',\n'Somalia':'SO',\n'South Africa':'ZA',\n'South Georgia And South Sandwich Islands':'GS',\n'South Korea':'KR',\n'Spain':'ES',\n'Sri Lanka':'LK',\n'Sudan':'SD',\n'Suriname':'SR',\n'Svalbard And Jan Mayen':'SJ',\n'Swaziland':'SZ',\n'Sweden':'SE',\n'Switzerland':'CH',\n'Syria':'SY',\n'Taiwan':'TW',\n'Tajikistan':'TJ',\n'Tanzania':'TZ',\n'Thailand':'TH',\n'Togo':'TG',\n'Tokelau':'TK',\n'Tonga':'TO',\n'Trinidad And Tobago':'TT',\n'Tunisia':'TN',\n'Turkey':'TR',\n'Turkmenistan':'TM',\n'Turks And Caicos Islands':'TC',\n'Tuvalu':'TV',\n'Uganda':'UG',\n'Ukraine':'UA',\n'United Arab Emirates':'AE',\n'United Kingdom':'UK',\n'United States':'US',\n'United States Minor Outlying Islands':'UM',\n'Uruguay':'UY',\n'Uzbekistan':'UZ',\n'Vanuatu':'VU',\n'Vatican City (Holy See)':'VA',\n'Venezuela':'VE',\n'Vietnam':'VN',\n'Virgin Islands (British)':'VG',\n'Virgin Islands (US)':'VI',\n'Wallis And Futuna Islands':'WF',\n'Western Sahara':'EH',\n'Western Samoa':'WS',\n'Yemen':'YE',\n'Yugoslavia':'YU',\n'Zambia':'ZM',\n'Zimbabwe':'ZW'\n};\n\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 100},\n    width = 800 - margin.left - margin.right,\n    height = 296 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nfunction plot(country, from_year){\n    \n    $.getJSON(\"http://query.yahooapis.com/v1/public/yql/\", {\n          //\"env\":\"http://github.com/spier/yql_worldbank/raw/master/alltables.env\",\n          \"env\":\"store://datatables.org/alltableswithkeys\",\n          \"q\":'SELECT * FROM worldbank.data(0,100) WHERE indicator_id = \"SP.POP.TOTL\" AND country_id = \"' + country_map[country] +'\" AND from_year = ' + from_year,\n          \"format\": \"json\",\n          \"jsonp\" : \"?\"\n        }, function(res) {\n            if(!res.query.results) {\n                $('body').html(\"<p>No data</p>\")\n            }\n            var data = res.query.results.data;\n            console.log(data);\n            data.forEach(function(d) {\n                d.date = new Date(d.date);\n                d.value = parseInt(d.value, 10);\n            });\n        \n            x.domain(d3.extent(data, function(d) { return d.date; }));\n            y.domain([0, d3.max(data, function(d) { return d.value; })]);\n        \n            svg.append(\"g\")\n              .attr(\"class\", \"x axis\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(xAxis);\n        \n            svg.append(\"g\")\n              .attr(\"class\", \"y axis\")\n              .call(yAxis)\n            .append(\"text\")\n              .attr(\"transform\", \"rotate(-90)\")\n              .attr(\"y\", 6)\n              .attr(\"dy\", \".71em\")\n              .style(\"text-anchor\", \"end\")\n              .text(\"Population\");\n            \n            svg.append(\"path\")\n              .datum(data)\n              .attr(\"class\", \"line\")\n              .attr(\"d\", line);\n    });\n}\nfunction getTag(node, tag, callback){\n    if(node.tag === tag) {\n        callback(node);\n    } else if(node.interpretations) {\n        node.interpretations.forEach(function(interpretation){\n            interpretation.forEach(function(component){\n                getTag(component, tag, callback);\n            });\n        });\n    }\n}\n$(function() {\n    var interpId = $.url().param('interpId');\n    $.getJSON('../interpretations/' + interpId, function(data) {\n        console.log(JSON.stringify(data.root));\n        //Why does this work in the interpreter?\n        //var mpt = data.root.interpretations[0][0];\n        //var multiParseTree;\n        getTag(data.root, \"country\", function(country_node){console.log(country_node)\n            getTag(data.root, \"from_year\", function(from_year_node){\n                console.log(from_year_node)\n                plot(country_node.match, from_year_node.match);\n            });\n        });\n    });\n});\n</script>"]],"start1":0,"start2":0,"length1":0,"length2":8743}]],"length":8743,"saved":false}
